<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2241px" height="2648px" viewBox="-0.5 -0.5 2241 2648" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2023-03-24T19:19:37.076Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36&quot; version=&quot;21.1.1&quot; etag=&quot;wS92fMX4PsD3dlWtUxFW&quot;&gt;&lt;diagram id=&quot;fz8VxKYFZKuv3LC-ltpq&quot; name=&quot;Seite-1&quot;&gt;7T3Lduq4sl+TtehBeoEhIRkS4yTcS3AOeO/svhOWYyvgs41NyyaPMzjffvU0fsi2DE4HEwa9Gyt6VJVKVaVSqXTWVVfvd9BcLx98G7hnStt+P+sOzxSl22tfo//hkg9aorQVVrKAjk3LOtuCmfMfwArbrHTj2CBIVAx93w2ddbLQ8j0PWGGizITQf0tWe/Hd5Khrc8FGbG8LZpbpgky1J8cOl7T0Sulvy++Bs1jykTuXDL9n0/q9gP7GY+N5vgfoX1Ym74YNGSxN23+LFXW1s64KfT+kv1bvKnAxXTnFaLvbnL9GIEPghTINPDRtygVt9Wq6G4b6mXLpovY3awxi+MEocvn3BsN1szLhwvHOuoP2+j36PA/9NSrqkaIQvIfnpusscC0LwQIgKt32gH4t2P/JOM+8QDVda+OaoeN7P0LH5X9HCDyn26CydbpsCTHAnJP4aJ34wLfpNmU4oj/z/yhyruOB8yWb+UHnz0shaueofgqb1h+o/hmekeZgMNVns9Hkbq79HIx/DIyRPplRJB5MDLu5WuP+cPXZ2rSA8bFGrK6iv99uPAsjnqz06AcOLv2JFqwPac0btKiBua3IcUt+UT6BMfQxfI/aZDA2/joQ8A58Qs+UG7z0g1vHc4LlGLVBkiYIgK36ECKM3Y9WikpJejD2fY4Ikp0TOsQChI8m7pi3D1oiygp7HztBWDwppYyRg6fjLR6Bh6QSAmwXRJOzqyTmSHkFMHSQ7hhQoTck0vCGicChC15wKx/VenGJvH9xkBzu3rz4Xsg0X6fHvm/NleNipXkP3FeAe8VsFK5cXAn9JJoFYAHeRl+RBsEflr9yLPbbNZ+BexOpItV3EfG6Q6KMULMQ+r8jvdaJUIqrDqZNMGrgPVbEVMkd8FcghB+oCvtrn2t4pvI7V1yXv20VaO+qS8uWMeWpdC6Z4mZKexF1vtVe6AdTYPnKrHtIugw2WH/RRYRwaFlLs2jBNgSfc8LJrm854QcFPCNXxCoGSUbgvCJZhmUHb1skA88ZS+J6lHY5lVZIHsxCaIZgwbp9iJeImv0XVRpNRsZoMJ7/1Ma6OjL+qoSNBc1gCWw5LNasz6IRDnzaKRtjSnPr69VHk5OvNth0s9mWbGRaFnABnrfW0MGqFJFJriVSleoGYpnLycuHlJhQrugYsAM07hbPcjUdgDDOcK34hxz0b47XEgqFcqwTI/8hyf60te0ElgntalOEhvzJln9lCpNFsyuiE6Q/dp5b1H5k81a5woTzgUoXdw4HnOyXMvulc9FJ2i+KwH5RetdZ++Wic1WP/dL+cvvFiRXErPDkl4O7eUEmtOS2yEmPkuLfrOk0WwPLeUHMw3ZpzbajqqzjfSTVvvKmTIYcmu7bXTLnmQQnKVkuJfsJKXktEpLdvmCT12vXIyQ7Xy8lt6LK916cReMFFEWjgR5KZC5av6ng8SHbRt06Lsjd1Lz4LlqcAFZpg4VFQf0DJ1Nk7d+mUW9hLMrkJdk2LoH1W3t3gtDxFlFzHRpL6L/Fe8klYyTyjcSEteTaBZl2MpBHY2YRlwb3IT718tAmm+UAe9I1ErpGSZrkHaWX1TaXnay26So1uRT7X65sDsIkJwriuKxy2XV6UAJpJ/m5uyCT1hknYVYuzK4lLOeOQJZ1Lnv1yDIuPA/Ecg78hBHVTCnC8GjNQoiMI3pSQn83z5p+HEy0+dNoaNxT0JFSybUJSd17bXR3b5RXVvWxPp3PnkaGej+fjTXtcW6MHrTyhpi9DABXjme6tPbsDZHWiBfntR2oqvZoDG7G2lz7NTLmqj6UHHGk03oG/d2MCeQHGKZN2a+V4ELOngUnH7whPoNPsHP2UD7qLWZcyA5kLU1vAR6hv1qHRO62yL8y+xAcWQD9NdYmIOBKjPPB9i8pWAUMIxNcAsEC4Q3gjwDAEZZrcLMOk0QtPUwKN9Az/Bvf/42m93elxpbrB/KnVqateZtVYtZU1wxSpNCEM6YV7PvIVJkeqDBRke2wE9prVLUalUkLHOZRjbzABc/EbVlhFA2x7AcZSn5eWABRErjSA2TPiXN6rm45WWCVLLDOVafUAuteig54avNdfv12Mm2BRfKN7R6PwhxLIHUUtpnF7GUCd8p4zsiPvzdOOFv6MLQ2Yalaxg3G+p0uVTF0Qg5EsuaBk5ByB/DsO3MlL74RhiAWqICP7rZmDimjQYSlXQi1wE3p6RpvjjfdrawZxvbvCWsmw+P6GntrYmZPbtOikIu1a34Q30OL/CtHQNbuyfE8AOPUkyR8dKIYbxsVlg+sQYisloomG5/y6iY0GxXJHei3mIqvRKgHEATmosCQOen4Mh3f612kgjj6Ai/LlUDH9+ryGCtfruKlPMYAbRjwwX08DL5Wn3FmoTbQqDiPCxxxpEFDMKGCZqzdGkmwBdLox+Ncsl5BFRpxSwI4qgV1DPWnidz4uKZUpfl066YqxluuolytiT7RGsgi9LAgOugl9ze4BgQpAyS+xOVMCRLehDmgcrAPkaf6S1I5yhgDTvATyU57u4ylt+KxgSMabEe8uDm7GJ40s6xmPld4lGTR/RC01Rao5l5NqrlzQAcgQ3/ih6KY5waqSSZq0xg1MKDIQsuBTCGGG3sQFgA2BHw6CR7ix4dYdKOMhERCeRYiSzBA8mQr7Mu2O/g0egM9vmlR43vjXMfASTKK/JLd5MlwR8kKxs71leBk+Lomv6RyQDfnsGviCK5/czQaKASNX8b8doTPTSfD0eSuse4+CwKkh2aWSfxPscgVVlRoNBrvIXG7xZqdrtRUlWxKKlpcaPN1rgU2X+eyLpvv+nBEG3Y+N1is0aVBPOhxL3BDoI/ixVncAPlZtH2fP40mE21aHjNi0XssyAIaoYX4Xt7gjXjEc+s3gJDBb2d968Bge3lnFGJvYixFAwGhKH2DTMjHGvoWMjCjAAzU1Wi1Nq1Q8gzHYklYwKMZpq8K/RN5KJCRzI4//ihnC4BlFIE1nj6jpYpv4LOzHp7Kokp+DtRj1DsCqKorJiA9JHZ6BC0MT/VrxBSe6NLbDvDwuNgoJCh3acdYapudRJU9l6KQqniLWDadjFBvTmgtDR/fyqP3s3FKhSqDjewYQQrzCXDmoXlPeM6TLfPUltxFTUo7OUoshCxT8ea3j7rAW87Cq4Ynq6zUKrvk+0tmlV1dZmyyXlsRhMH0awpE7nx90rFDuFWBLamju1NRo2Y4AOW9p6bcX7fJCb099UdFW6U+kb6/gqygjaV010l9VFYf58p1dlMvVCDddl1xlJ0vVyCRgB55r/h8EfuJbn24MkPt3QLroxDn+aglD1FPi0d68fSuLyVOQbsCj1htDrHLw1k7WE1gdX00Z6BphOLu44YgwlMeEDMqx6CqEvjR8GNVehfItPHMBvHp3I8qe53Wypy77nbOe5LgpRK8e5EMMeUHs3H5zS2kRAKcrlKTAFe+XIAfwu75qGJnJroxf9B/RqetxTsZdTCdP+mT+cwYGLO5of0yGntGe4pXaZwE7KYC+YT7P6UtyAHWuapp//f1/sNIzGDf1K2DpgoejTDKotRiRyrkYrHZsNB3moFgZswnGpabg/GYgm/7m+eCS3RrTAWW/ySha6gDL++ved0RCIajqabihwrmqj5B0ntiSIHyf9pUn+MOpGqTkUYPj4PZDGc/kG+jP2oTUe0GzG+w8v1wSfzEMVbF3xMkLqocb1W2rVlmAswEqh+EovGF0JTMiBNMgAmfTNfdESMG1wST79mHQSvVNgIuEcgu6kJfA48cH9aNIzuK3YIY7xc6PnTCj39twGZrQbpc5NIhBXcf03cUiiqnoC13OFcyO0i+QSRGb0AQZjhTdHARA7WeDSNPmsH6vYX+Cv3nhQ6ANF7j2U2R1hCRSX/+NxqEH66fDCVZQ+kyZSZ1s15y0Uax1+/WYyUdkKOvTF0221YSINaiN6zFBpNgYef2U/U0s5EmGqPBwLifq/eD6UA1tOlsPtXutF9SYtYymW9RLYiQod3r+nQ4mgwMrUL36wTFixyjlU+acfcPP8bG6HE8UskbVvNbhL4uEXaYambcT7XZvT4eSgQsNtcdu48HoLryXJrBFJjWEth4faq+D23Hi2UNkrK/3sPUBURRJEMUJrE9Qy8G779Mt2dYs5Xrn96JORkKW+jjkNIfMUCLPj/Zx80d9XT3mozcr4kWEDMnBmwCADI5WoJJk+CIgf3vTRACWxAWUrRosdFUaeyTgVb+ZFk3aaLx7BHxhFCi2wkX/NnMvS9eHVAgQ3r70WibDCMiDhlL7FfpBrVZxhLdOYNX6U0jfmH30UdyQvVXaL2YUVKG2LfUnjk/Us8PPqNz2WfIsmmq/NB0saeCqZwmubMiDbjPu1EGJ0Bk6+R7Ymij0GdJjyqcpzwiLmzJOy8C1qKa2wX8vTHdoJVwQkg9b7alQWKVn4LFK/kwkhf4ev3r7FGP6Gpyl2fl3/u0+4CuJuc+gthQPZlApzi9kchlkWwuMEgbQo1zyu5lBvhHSbDwweG1o2DfTeAidfBLLg7b9nFyW3tjhWKWSzkkBD2gbTnajNtAbjzTtsUDVVGof0ne+No84zumOZjJPKJ6UkKCrH6KTNDshUgN1ZU6CFc/FDU0NS1AbjIP1uvGK6E4Mg3MlbFJpE8m0AszKme0iQ3NNzmXkTYZzu8GD9r8aTAyyMMJ89FkPtNUfTKclautqf4DdbBbW4u+b8f2c/G37jJVCYTGyOABB2Un5jgVAqkYT4qQqfavHwjs2b0+NdQfhlTHOKpiOJgO59p0qk/nDzNh/hKB5/AFgmB5F4FV6Ew7SFaEG08qu3GsLrlYJvn0Ajm9Jo7VsueDKD1pJt2o1Qy4zIFcR2Ji+jyB7wcgfQctlipYKi7HA28VckKvTIfffaFxE1LEBkFownD0gkSci9Tusyv7WAERFMA1PzCI+iZcb8KYt7iwmWyuazqE5WMyDTx7GEudzN3v5J0/GitQ+ARBNobFQ+YO0nD/AXmgnGyfUh8133EXPVrAHzZI+KjrSg729S7qw0hoHMug0Fibi2hIjkdcVjYEfiqFb0eT0ey+NFsvCQzEyKpLHh9QcgV6GxxaUImNLpV+2JgO1P+V7VEq6zGrm06+3Ih5w28fkvQkEQvm5xaOrza5QwhhhuDMohVt2nmdWx9iVomvC7GVsiNwW2yj9vnBl9tIB87CoifkTwq0TIGmHv0R+g6ii+kJ30G/Jt/B12cdPhAFKng0pYE6lC7MODIN81uwdPczntuuQPw86D+1+XjEbx4U1CTRdbf6eKw/SfRLa48mQ4m6Q33OrsdpDSRzSvDHl0CZ7BcrNPEiOimBQiWQyT5/1c86kNuCSB+Fa4t9lcDVlyuBSM4m8uM1VgDTlH/NzK8QUq8YcO2AuarM9VlhfGIqhZ+cg8yEQV78Iw2UluklQuis9FrydIB2Jkio45BkHsFcmLSQrb4mHqtywxzPx2AbqyM89yvehPDAVfyyaEmGCdHDu8WbB7xvmII1BAESEMS2iwErOLIvnK6tPy+z+KSSdcV8l0WB+ohvn5xwiUHX3hENgviGTDbBqVRiMHrRDhOevO1a7ZVW07bRODFyUtrlRHOXEMiJEpLqlrVZOyDnzFoCKCMSLntBtEtA2D1ZOzJUp5MUlK2cvQSXSV/+IaaE4B5NwSvWUkxG+z2lkKvjLaAoY0p8U66IIq8vrms60G9/uUF2CFlUiLA4riSkD4Nfc3UwLTneZnVHE3HdRmBap37fPalmTWZQvqEgZM9qMvmz9dtJ5leW+cKDTJHIV+rKGvP1L4EcgsQ/rgffD+SJ7D0f+m7eS9n/+FPqn/+6djHcO78HXvxs+klxVH3SW6Q3hC96d+ty3XYOyHeLpfdRJdBII9RK6SeVGa3Nc/JaOP2+hFdt5xDib5rGYfcEuKUJIE7SuFwaJ69iiLLfXghSP9aS/RbYCyBy26QmSkhI/IXbz1g9H4ZLf4HNPm1bemObwTKqTqJ2B8g0etsSFdk9vOTZ9fFjcriIz68SkZ3PxRmOLbnCCwRVfHfCX3jq/ryIvv8i3+3oe/jO5pZ8fPAPZPV8JJriAty2w9vigm1j8sVb50574G+gBbaKjl21RGijNbYtZiTH1CtkkRgPXAjiaXgZBK6Jn/pIgCJiCzICorb5EauwxhfZgwzXRGBIM5LwDYkTJ9XDSdz0SrNS/yhZqX/ipM/jpL6Yk66PkpNEiY2/Eyf1Lz6Rk3piTuL59A+NlRgAJHPL1gDrKN1UXsnLizjjZRpcp59rqlq/X1w/Slcpro9+UBT3WRYiz+13WhafKmCvc5bFxWEui33Nvu++gfhUEXt5FCK2d5l0OX4HEfvdd0OfuSwujmFVKJ3vZ3eIbu6cFkU9i+IoVMUhMq0o7fsnMG07zbSWAy0XPLqbgP/llnjAGZPYKebOsC5m3GaYzLw8zbvHaTGLTj+/Hz8pnygKj8Ixcd5JGwglsrDbL5SdtchCUfLI76TAP1MKXom5VjnO4yLlm3PSp7oNclipWQLwov+9vAZw8X6vP/X/53WuttvvU2Xeffh1np8syHZez0SxJIlQqDP6zsFZUSxUsMaxlIKenqNIiHOLLgMapU0urRV2mQmdwkEawjHwH85pDA3uvHNFgl6yPY/BAq1PVOMF395sW64ZINZp2465gOaKNsapD9N3cenAmTguUWwXpUOmmNA5WVob6XFMzT86YI1zbSwBmQ78xhIJE0KjszmyENFNx8MTZBIWD0ldhAVAAolwAp/AAMFuhhsI6M3a02TsMxkBDv6yzvB787bz4uDotbZDlwkJnQU26Qb9s1mvAbTMAHw51WskwvlUHwznk8GDJopfazx6hXzabNSi2EwiMiDm5ZUJfxN+fXOQKYJKz/DDGwB4pAa23HCXQQhMXMl/2VbBNgYy8v48Guoc9cR7INLnJbMPSQGOh8UFRNHg4jV2aCBoPlbPvnua9O+AWmqfmIzufVs6ISBXI1HBGzRxUHFsJ8ns6XSArmBflRuz2++kNg5dwYPtwqdI0SYyf5OUE7WLPqGP6bfdViCklg9oP4dr/D8=&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs><style type="text/css">@import url(https://fonts.googleapis.com/css?family=Architects+Daughter);&#xa;</style></defs><g><rect x="947" y="2200" width="483" height="216" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 485px; height: 216px; padding-top: 2200px; margin-left: 947px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 483px; height: 216px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>CalculationUtil</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- CalculationUtil(): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- CROSSING_EVALUATIONS: Map&lt;SpaceType, Function&lt;PositionVector, Boolean&gt;&gt;<br />- PENALTY_EVALUATIONS: Map&lt;SpaceType, Function&lt;PositionVector, Boolean&gt;&gt;</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ isFinishLineCrossedCorrectly(SpaceType, PositionVector): boolean<br />+ getPassedPositions(PositionVector, PositionVector): List&lt;PositionVector&gt;<br />+ isFinishLineCrossingPenalised(SpaceType, PositionVector): boolean</p></div></div></div></foreignObject><text x="947" y="2214" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">CalculationUtil...</text></switch></g><rect x="369" y="1600" width="249" height="518" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 251px; height: 518px; padding-top: 1600px; margin-left: 369px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 249px; height: 518px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Car</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ Car(char, PositionVector): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- velocity: PositionVector<br />- receivedPenalty: boolean<br />- id: char<br />- moveStrategy: MoveStrategy<br />~ INITIAL_VELOCITY: PositionVector<br />- crashed: boolean<br />- position: PositionVector</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ move(): void<br />+ receivePenalty(): void<br />+ accelerate(Direction): void<br />+ getCurrentPosition(): PositionVector<br />+ isPenaltyActive(): boolean<br />+ setMoveStrategy(MoveStrategy): void<br />+ win(PositionVector): void<br />+ getMoveStrategy(): MoveStrategy<br />+ discardPenalty(): void<br />+ getVelocity(): PositionVector<br />+ crash(PositionVector): void<br />+ getNextPosition(): PositionVector<br />+ getId(): char<br />+ isCrashed(): boolean</p></div></div></div></foreignObject><text x="369" y="1614" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">Car...</text></switch></g><rect x="375" y="1300" width="237" height="240" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 239px; height: 240px; padding-top: 1300px; margin-left: 375px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 237px; height: 240px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>CarSpecification</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ getId(): char<br />+ getVelocity(): PositionVector<br />+ getNextPosition(): PositionVector<br />+ isCrashed(): boolean<br />+ accelerate(Direction): void<br />+ getCurrentPosition(): PositionVector<br />+ crash(PositionVector): void<br />+ move(): void</p></div></div></div></foreignObject><text x="375" y="1314" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">&lt;&lt;interface&gt;&gt;...</text></switch></g><rect x="1790" y="1514" width="261" height="326" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 263px; height: 326px; padding-top: 1514px; margin-left: 1790px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 261px; height: 326px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Config</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ Config(): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- trackDirectory: File<br />- followerDirectory: File<br />- moveDirectory: File</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ setFollowerDirectory(File): void<br />- checkExistingDirectoryOrThrow(File): File<br />+ getTrackDirectory(): File<br />+ setTrackDirectory(File): void<br />+ getFollowerDirectory(): File<br />+ getMoveDirectory(): File<br />+ setMoveDirectory(File): void</p></div></div></div></foreignObject><text x="1790" y="1528" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">Config...</text></switch></g><rect x="1815" y="1300" width="211" height="164" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 213px; height: 164px; padding-top: 1300px; margin-left: 1815px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 211px; height: 164px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>ConfigSpecification</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ setMoveDirectory(File): void<br />+ setTrackDirectory(File): void<br />+ getFollowerDirectory(): File<br />+ getTrackDirectory(): File<br />+ getMoveDirectory(): File<br />+ setFollowerDirectory(File): void</p></div></div></div></foreignObject><text x="1815" y="1314" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">&lt;&lt;interface&gt;&gt;...</text></switch></g><rect x="1399" y="1300" width="369" height="540" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 371px; height: 540px; padding-top: 1300px; margin-left: 1399px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 369px; height: 540px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Console</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ Console(String, String): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- PANE_WIDTH: int<br />- PANE_HEIGHT: int<br />- COLOR_SWITCH_SLEEP_TIME: int<br />- textTerminal: SwingTextTerminal<br />- ACCEPTABLE_EXIT_CODE: int<br />- textIO: TextIO</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ readString(String): String<br />+ readStringList(String, List&lt;String&gt;): String<br />+ changePromptColor(Color): void<br />- getProperties(): TerminalProperties&lt;SwingTextTerminal&gt;<br />- registerUserInterrupt(String): void<br />+ returnToBookmark(String): void<br />+ close(): void<br />+ readEnum(String, Class&lt;E&gt;): E<br />- changePaneColor(Color): void<br />+ setBookmark(String): void<br />+ print(String): void<br />+ printLine(String): void<br />+ celebrate(): void<br />+ printEmptyLine(): void<br />+ readBoolean(String): boolean<br />- initProperties(String, String): void</p></div></div></div></foreignObject><text x="1399" y="1314" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">Console...</text></switch></g><rect x="663" y="1660" width="289" height="426" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 291px; height: 426px; padding-top: 1660px; margin-left: 663px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 289px; height: 426px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>ConsoleUserInterface</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ ConsoleUserInterface(String, String): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- console: Console<br />- quitShortcut: String<br />- LOGO: String<br />- title: String</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ endGame(): void<br />+ retrieveStrategy(char): StrategyType<br />+ retrieveBoolean(String): Boolean<br />+ retrieveFile(List&lt;File&gt;, String): Optional&lt;File&gt;<br />+ displayTrack(Track): void<br />+ displayWinner(char): void<br />+ retrieveDirection(char): Direction<br />+ displayError(String): void<br />+ retrieveString(String): String<br />+ displayIntro(boolean): void<br />+ displayMessage(String): void</p></div></div></div></foreignObject><text x="663" y="1674" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">ConsoleUserInterface...</text></switch></g><rect x="0" y="2200" width="254" height="446" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 256px; height: 446px; padding-top: 2200px; margin-left: 0px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 254px; height: 446px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;enumeration&gt;&gt;</i><br /><b>Direction</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- Direction(PositionVector): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ LEFT: <br />+ UP_LEFT: <br />+ UP: <br />- vector: PositionVector<br />+ DOWN_LEFT: <br />+ DOWN: <br />+ DOWN_RIGHT: <br />+ UP_RIGHT: <br />+ RIGHT: <br />+ NONE: </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ getMovingDirections(): Set&lt;Direction&gt;<br />+ getVector(): PositionVector<br />+ valueOf(String): Direction<br />+ isValidDirection(String): boolean<br />+ values(): Direction[]</p></div></div></div></foreignObject><text x="0" y="2214" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">&lt;&lt;enumeration&gt;&gt;...</text></switch></g><rect x="1355" y="510" width="198" height="190" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 200px; height: 190px; padding-top: 510px; margin-left: 1355px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 198px; height: 190px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>DoNotMoveStrategy</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ DoNotMoveStrategy(): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- counter: Integer</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ nextMove(): Direction<br />+ getStatistics(): String<br />+ getTurnMessage(Car): String</p></div></div></div></foreignObject><text x="1355" y="524" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">DoNotMoveStrategy...</text></switch></g><rect x="1475" y="2200" width="194" height="166" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 196px; height: 166px; padding-top: 2200px; margin-left: 1475px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 194px; height: 166px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>FileUtil</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- FileUtil(): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- TXT_FILE_ENDING: String</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ createScanner(File): Scanner<br />+ isTxtFile(File): boolean</p></div></div></div></foreignObject><text x="1475" y="2214" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">FileUtil...</text></switch></g><rect x="1838" y="476" width="402" height="574" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 404px; height: 574px; padding-top: 476px; margin-left: 1838px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 402px; height: 574px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Game</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ Game(Track): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- track: Track<br />+ NO_WINNER: int<br />- currentCarIndex: int<br />- winnerCarIndex: int</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- skipFirstPosition(Iterator&lt;PositionVector&gt;): void<br />- processInterruptionImpact(): void<br />+ calculatePath(PositionVector, PositionVector): List&lt;PositionVector&gt;<br />+ getWinner(): int<br />- evaluatePassedPosition(Car, PositionVector, SpaceType): boolean<br />+ getCarPosition(int): PositionVector<br />+ setCarMoveStrategy(int, MoveStrategy): void<br />+ getCarVelocity(int): PositionVector<br />+ getTrack(): Track<br />- processPositions(Car): void<br />+ getCarCount(): int<br />+ switchToNextActiveCar(): void<br />+ getCarId(int): char<br />- evaluateFinishCrossing(Car, SpaceType, PositionVector): boolean<br />+ getCurrentCarIndex(): int<br />+ getCarMoveStrategy(int): MoveStrategy<br />+ doCarTurn(Direction): void</p></div></div></div></foreignObject><text x="1838" y="490" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">Game...</text></switch></g><rect x="1838" y="100" width="402" height="300" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 404px; height: 300px; padding-top: 100px; margin-left: 1838px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 402px; height: 300px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>GameSpecification</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ setCarMoveStrategy(int, MoveStrategy): void<br />+ calculatePath(PositionVector, PositionVector): List&lt;PositionVector&gt;<br />+ getCarPosition(int): PositionVector<br />+ getCarVelocity(int): PositionVector<br />+ doCarTurn(Direction): void<br />+ getCarId(int): char<br />+ getWinner(): int<br />+ getCarMoveStrategy(int): MoveStrategy<br />+ switchToNextActiveCar(): void<br />+ getCarCount(): int<br />+ getCurrentCarIndex(): int</p></div></div></div></foreignObject><text x="1838" y="114" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">&lt;&lt;interface&gt;&gt;...</text></switch></g><rect x="1714" y="2200" width="234" height="66" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 236px; height: 66px; padding-top: 2200px; margin-left: 1714px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 234px; height: 66px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>InvalidFileFormatException</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ InvalidFileFormatException(String): </p></div></div></div></foreignObject><text x="1714" y="2214" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">InvalidFileFormatException...</text></switch></g><rect x="1573" y="488" width="220" height="232" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 222px; height: 232px; padding-top: 488px; margin-left: 1573px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 220px; height: 232px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>MoveListStrategy</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ MoveListStrategy(File): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- moveList: List&lt;Direction&gt;<br />- counter: Integer</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- readMoves(File): List&lt;Direction&gt;<br />+ nextMove(): Direction<br />+ getTurnMessage(Car): String<br />+ getStatistics(): String</p></div></div></div></foreignObject><text x="1573" y="502" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">MoveListStrategy...</text></switch></g><rect x="536" y="100" width="207" height="180" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 209px; height: 180px; padding-top: 100px; margin-left: 536px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 207px; height: 180px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>MoveStrategy</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ NOT_MOVING: int<br />+ CAR_WON_STATS_TEXT: String</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ nextMove(): Direction<br />+ getStatistics(): String<br />+ getTurnMessage(Car): String</p></div></div></div></foreignObject><text x="536" y="114" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">&lt;&lt;interface&gt;&gt;...</text></switch></g><rect x="224" y="367" width="420" height="473" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 422px; height: 473px; padding-top: 367px; margin-left: 224px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 420px; height: 473px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>PathFinderStrategy</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ PathFinderStrategy(Track, Car): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- COST_NEAR_WALL: double<br />- pathFollowerMoveStrategy: PathFollowerMoveStrategy<br />- COST_DIRECTION_CONSTANT: double<br />- ZERO_COST: double<br />- COST_IMPASSABLE: double<br />- COST_OPEN: double</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- smoothPath(Track, PathNode): boolean<br />+ getTurnMessage(Car): String<br />- getMoveCost(Track, PathNode, PathNode): double<br />- isNearWall(Track, PathNode): boolean<br />- getNeighbors(PathNode): PathNode[]<br />- getOpenSpaceMoveCost(Track, PathNode, PathNode): double<br />- processNeighbors(Track, PriorityQueue&lt;PathNode&gt;, Set&lt;PathNode&gt;, PathNode): void<br />+ getStatistics(): String<br />- findBestPath(Track, PositionVector): PathNode<br />+ nextMove(): Direction<br />- getPathNodeFromFrontier(Iterable&lt;T&gt;, Object): T</p></div></div></div></foreignObject><text x="224" y="381" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">PathFinderStrategy...</text></switch></g><rect x="941" y="345" width="394" height="525" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 396px; height: 525px; padding-top: 345px; margin-left: 941px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 394px; height: 525px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>PathFollowerMoveStrategy</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ PathFollowerMoveStrategy(File, Car): <br />+ PathFollowerMoveStrategy(List&lt;PositionVector&gt;, Car): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ PATH_CHARACTERS_REGEX: String<br />- car: Car<br />- PATH_COORDINATE_REGEX: String<br />- positionVectorList: List&lt;PositionVector&gt;<br />- MULTIPLICATION_FACTOR: int<br />- MULTIPLICATION_THRESHOLD: int<br />- counter: Integer</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ getStatistics(): String<br />+ nextMove(): Direction<br />- hasReachedPathCoordinate(): boolean<br />- getNextValidDirection(PositionVector, int, int): Direction<br />~ getPositionVectorList(): List&lt;PositionVector&gt;<br />- getNextDirection(int, int, Direction, Direction, Direction): Direction<br />+ getTurnMessage(Car): String<br />- readPathFile(File): List&lt;PositionVector&gt;<br />- rightTurnNeeded(int, int): boolean<br />- getAdjustedVelocity(int): int<br />- leftTurnNeeded(int, int): boolean</p></div></div></div></foreignObject><text x="941" y="359" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">PathFollowerMoveStrategy...</text></switch></g><rect x="285" y="869" width="298" height="361" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 300px; height: 361px; padding-top: 869px; margin-left: 285px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 298px; height: 361px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>PathNode</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ PathNode(PositionVector, PathNode, double): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- prev: PathNode<br />+ gridPointComparator: Comparator&lt;PathNode&gt;<br />+ costComparator: Comparator&lt;PathNode&gt;<br />- position: PositionVector<br />- totalCost: Double</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ getPosition(): PositionVector<br />+ getTotalCost(): Double<br />+ toString(): String<br />+ getPrev(): PathNode<br />+ setPrev(PathNode): void<br />+ equals(Object): boolean<br />+ setTotalCost(double): void</p></div></div></div></foreignObject><text x="285" y="883" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">PathNode...</text></switch></g><rect x="644" y="2200" width="258" height="346" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 260px; height: 346px; padding-top: 2200px; margin-left: 644px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 258px; height: 346px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>PositionVector</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ PositionVector(PositionVector): <br />+ PositionVector(int, int): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- x: int<br />- y: int</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ toString(): String<br />+ equals(Object): boolean<br />+ getX(): int<br />+ dotProduct(PositionVector): Integer<br />+ hashCode(): int<br />+ add(PositionVector): PositionVector<br />+ getY(): int<br />+ subtract(PositionVector): PositionVector</p></div></div></div></foreignObject><text x="644" y="2214" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">PositionVector...</text></switch></g><rect x="997" y="1300" width="381" height="590" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 383px; height: 590px; padding-top: 1300px; margin-left: 997px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 381px; height: 590px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>RacetrackApp</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ RacetrackApp(): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- userInterface: UserInterface<br />- draw: boolean<br />- END_GAME_WAIT_TIME_IN_SECONDS: int<br />- ROUND_WAIT_TIME_IN_SECONDS: int<br />- config: Config<br />- GAME_TITLE: String<br />- game: Game<br />- QUIT_SHORTCUT: String<br />- STANDARD_ERROR_MSG: String<br />- refreshGame: boolean</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- runGame(): void<br />- runGameTurn(): void<br />- getTrackFile(): File<br />- retrieveTrackFileSelection(): Optional&lt;File&gt;<br />- chooseCarMoveStrategy(char): MoveStrategy<br />- newGame(): void<br />+ main(String[]): void<br />- restartIfApplicable(String): void<br />- delayGameOutput(int): void<br />- endGame(): void<br />- decorateAndDisplayErrorMessage(Throwable, String): void<br />- initializeGame(): void</p></div></div></div></foreignObject><text x="997" y="1314" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">RacetrackApp...</text></switch></g><rect x="299" y="2200" width="300" height="376" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 302px; height: 376px; padding-top: 2200px; margin-left: 299px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 300px; height: 376px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;enumeration&gt;&gt;</i><br /><b>SpaceType</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- SpaceType(char): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ FINISH_RIGHT: <br />- spaceChar: char<br />+ WALL: <br />+ FINISH_DOWN: <br />+ TRACK: <br />+ FINISH_LEFT: <br />+ FINISH_UP: </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ getFinishSpaceTypes(): Set&lt;SpaceType&gt;<br />+ valueOf(String): SpaceType<br />+ spaceTypeForChar(char): Optional&lt;SpaceType&gt;<br />+ values(): SpaceType[]<br />+ getSpaceChar(): char</p></div></div></div></foreignObject><text x="299" y="2214" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">&lt;&lt;enumeration&gt;&gt;...</text></switch></g><rect x="0" y="477" width="204" height="210" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 206px; height: 210px; padding-top: 477px; margin-left: 0px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 204px; height: 210px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;enumeration&gt;&gt;</i><br /><b>StrategyType</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ StrategyType(): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ USER: <br />+ MOVE_LIST: <br />+ PATH_FOLLOWER: <br />+ PATH_FINDER: <br />+ DO_NOT_MOVE: </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ values(): StrategyType[]<br />+ valueOf(String): StrategyType</p></div></div></div></foreignObject><text x="0" y="491" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">&lt;&lt;enumeration&gt;&gt;...</text></switch></g><rect x="0" y="1610" width="324" height="559" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 326px; height: 559px; padding-top: 1610px; margin-left: 0px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 324px; height: 559px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Track</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ Track(File): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- trackFields: Map&lt;PositionVector, SpaceType&gt;<br />- cars: List&lt;Car&gt;<br />- height: int<br />+ CRASH_INDICATOR: char<br />- width: int</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ getSpaceTypeAtPosition(PositionVector): SpaceType<br />- readLines(File): List&lt;String&gt;<br />+ getCharRepresentationAtPosition(int, int): char<br />- initializeTrack(File): void<br />+ getCar(int): Car<br />- carWithCharExists(char): boolean<br />+ getCarCount(): int<br />- isLineEmpty(String): boolean<br />- addCarAtPosition(char, int, int): void<br />+ isPositionOccupied(PositionVector): boolean<br />- addTrackField(char, int, int): void<br />+ toString(): String<br />+ getHeight(): int<br />- getCarsAtPosition(PositionVector): List&lt;Car&gt;<br />- hasValidWidth(List&lt;String&gt;): boolean<br />+ getWidth(): int</p></div></div></div></foreignObject><text x="0" y="1624" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">Track...</text></switch></g><rect x="0" y="1300" width="324" height="280" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 326px; height: 280px; padding-top: 1300px; margin-left: 0px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 324px; height: 280px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>TrackSpecification</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ MAX_CARS: int<br />+ MIN_CARS: int</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ getCharRepresentationAtPosition(int, int): char<br />+ getCarCount(): int<br />+ getSpaceTypeAtPosition(PositionVector): SpaceType<br />+ getCar(int): CarSpecification<br />+ getWidth(): int<br />+ toString(): String<br />+ getHeight(): int</p></div></div></div></foreignObject><text x="0" y="1314" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">&lt;&lt;interface&gt;&gt;...</text></switch></g><rect x="663" y="1300" width="289" height="310" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 291px; height: 310px; padding-top: 1300px; margin-left: 663px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 289px; height: 310px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>UserInterface</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ retrieveFile(List&lt;File&gt;, String): Optional&lt;File&gt;<br />+ retrieveBoolean(String): Boolean<br />+ displayWinner(char): void<br />+ retrieveDirection(char): Direction<br />+ displayError(String): void<br />+ endGame(): void<br />+ retrieveStrategy(char): StrategyType<br />+ displayIntro(boolean): void<br />+ displayMessage(String): void<br />+ retrieveString(String): String<br />+ displayTrack(Track): void</p></div></div></div></foreignObject><text x="663" y="1314" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">&lt;&lt;interface&gt;&gt;...</text></switch></g><rect x="664" y="488" width="257" height="232" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 259px; height: 232px; padding-top: 488px; margin-left: 664px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 257px; height: 232px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>UserMoveStrategy</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ UserMoveStrategy(UserInterface, char): </p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- carId: char<br />- userInterface: UserInterface<br />- counter: Integer</p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ getStatistics(): String<br />+ getTurnMessage(Car): String<br />+ nextMove(): Direction</p></div></div></div></foreignObject><text x="664" y="502" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="14px">UserMoveStrategy...</text></switch></g><path d="M 493.5 1600 L 493.5 1554.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 493.5 1541.12 L 500 1554.12 L 487 1554.12 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/><path d="M 1920.5 1514 L 1920.5 1478.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 1920.5 1465.12 L 1927 1478.12 L 1914 1478.12 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/><path d="M 807.5 1660 L 807.5 1624.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 807.5 1611.12 L 814 1624.12 L 801 1624.12 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/><path d="M 1454 510 L 1454.11 335 Q 1454.11 325 1444.11 325 L 1148.11 325 Q 1138.11 325 1138.11 320 L 1138.11 317.5 Q 1138.11 315 1128.11 315 L 701.22 315 Q 691.22 315 691.23 305 L 691.24 294.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 691.25 281.12 L 697.74 294.12 L 684.74 294.11 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/><path d="M 2039 476 L 2039 414.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 2039 401.12 L 2045.5 414.12 L 2032.5 414.12 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/><path d="M 1683 488 L 1683 335 Q 1683 325 1673 325 L 1148.11 325 Q 1138.11 325 1138.11 320 L 1138.11 317.5 Q 1138.11 315 1128.11 315 L 701.22 315 Q 691.22 315 691.23 305 L 691.24 294.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 691.25 281.12 L 697.74 294.12 L 684.74 294.11 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/><path d="M 434 367 L 434.08 335 Q 434.11 325 444.11 325 L 1128.11 325 Q 1138.11 325 1138.11 320 L 1138.11 317.5 Q 1138.11 315 1128.11 315 L 701.22 315 Q 691.22 315 691.23 305 L 691.24 294.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 691.25 281.12 L 697.74 294.12 L 684.74 294.11 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/><path d="M 1138 345 L 1138.07 325 Q 1138.11 315 1128.11 315 L 701.22 315 Q 691.22 315 691.23 305 L 691.24 294.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 691.25 281.12 L 697.74 294.12 L 684.74 294.11 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/><path d="M 434 854 L 434 840" fill="none" stroke="#820000" stroke-miterlimit="10" pointer-events="stroke"/><ellipse cx="434" cy="861" rx="7" ry="7" fill="none" stroke="#820000" pointer-events="all"/><path d="M 434 868 L 434 854 M 427 861 L 441 861" fill="none" stroke="#820000" stroke-miterlimit="10" pointer-events="all"/><path d="M 102.01 462 L 102.1 325 Q 102.11 315 112.11 315 L 577.89 315 Q 587.89 315 587.85 305 L 587.75 280" fill="none" stroke="#820000" stroke-miterlimit="10" pointer-events="stroke"/><ellipse cx="102.01" cy="469" rx="7" ry="7" fill="none" stroke="#820000" pointer-events="all"/><path d="M 102 476 L 102.01 462 M 95.01 469 L 109.01 469" fill="none" stroke="#820000" stroke-miterlimit="10" pointer-events="all"/><path d="M 162 1610 L 162 1594.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 162 1581.12 L 168.5 1594.12 L 155.5 1594.12 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/><path d="M 792.5 488 L 792.55 335 Q 792.56 325 802.56 325 L 1128.11 325 Q 1138.11 325 1138.11 320 L 1138.11 317.5 Q 1138.11 315 1128.11 315 L 701.22 315 Q 691.22 315 691.23 305 L 691.24 294.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 691.25 281.12 L 697.74 294.12 L 684.74 294.11 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/><rect x="928" y="0" width="420" height="230" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 418px; height: 1px; padding-top: 115px; margin-left: 929px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="text-align: left;"><span style="background-color: initial;"><b><font style="font-size: 18px;">Legend for class diagram: RaceTrack</font></b></span></div><div style="text-align: left;"><br /></div><div style="text-align: left;"><span style="background-color: initial;">The following legend contains all the divergent class signatures:</span></div><div style="text-align: left;"><br /></div><div style="text-align: left;"><span style="background-color: initial;">The static modifier is displayed in uppercase:</span></div><div style="text-align: left;"><span style="background-color: initial;">-ROAD_NAME: String</span></div><div style="text-align: left;"><span style="background-color: initial;"><br /></span></div><div style="text-align: left;"><span style="background-color: initial;">Interfaces are marked with a green arrow instead of a grey one.</span></div><div style="text-align: left;"><span style="background-color: initial;"><br /></span></div><div style="text-align: left;"><span style="background-color: initial;">Inner classes are marked with a red line and a plus symbol.</span></div><div style="text-align: left;"><span style="background-color: initial;"><br /></span></div><div style="text-align: left;"><span style="background-color: initial;"><br /></span></div></div></div></div></foreignObject><text x="1138" y="119" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Legend for class diagram: RaceTrack...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>